import { useEffect, useState } from "react";
import Header from "../../Components/header";
import './doistyles.css'

const Doi = () => {

    const numberKey = ['1','2','3','4','5','6','7','8','9','0']

    //first let computer generate number
	const generateNumber = () => {
		let code = '';
		const numbers = [0,1,2,3,4,5,6,7,8,9];
		for (let i = 0; i < 4; i++) {
		const randomIndex = Math.floor(Math.random() * numbers.length);
		code += numbers[randomIndex];
		numbers.splice(randomIndex, 1);
		}
		return code;
	};

	const [generatedNumber, setGeneratednumber] = useState(generateNumber());//pass the generated number to this state
	const [guess, setGuess] = useState('');
	const [feedbacks, setfeedbacks] = useState([])

	const checkGuess = () => {
		let dead = 0;
		let injured = 0;
		for (let i = 0; i < 4; i++) {
			if (guess[i] === generatedNumber[i]) {
				dead++;
			} else if (generatedNumber.includes(guess[i])) {
				injured++;
			}
		}
		if (dead === 4) {
			setfeedbacks((prevState) => [...prevState, 
				`${guess}...Congratulations! You guessed the code within ${((feedbacks.length) + 1)} trial(s)`
			]);
		} else {
			setfeedbacks((prevState) => [...prevState, `${guess}...${dead} Dead, ${injured} Injured`]);
		}
        setGuess('')
	};

	const [rules, setRules] = useState(false);
	const handleRules =() => {
		setRules(!rules)
	};

	const [displayAnswer, setDisplayanswer] = useState(false);
	const giveup = () => {
		setDisplayanswer(!displayAnswer)
	};

    useEffect(() => {
        setRules(true);
    }, []);

    const handleKeys = (nuk) => {
        setGuess(guess + nuk)
    }


    return (
        <div className="doi">
            {rules &&
                <div className="rules">
                    <div className="rul">
                        <span style={{display:'flex', alignItems:'center', justifyContent:'space-between'}}>
                            <h1>rules</h1><h4 onClick={handleRules}>X</h4>
                        </span>
                        <p>guess the secret four digit number generated by the computer
                            'INJURED' means the number is among the secret number generated but is 
                            not in the right position. 'DEAD' means the number is among the secert number 
                            generated and in the right spot
                        </p>
                    </div>
                </div>
            }
            <Header />
            <div className="gamebg">
				<div className="game">
                    <span style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>
                        <h2>Dead and Injured</h2><span onClick={handleRules}>Rules</span>
                    </span>
                    <p>Try to guess the 4-digit secret code.</p>
                    <br/>
                    <input
                        type="text"
                        value={guess}
                        onChange={(e) => setGuess(e.target.value)}
                    />
                    <div className="hie">
                        {displayAnswer && 
                            <h1>{generatedNumber}</h1>
                        }
                    </div>

                    <div className="box">
                        {feedbacks.map((numl) => (
                            <p key={numl} >
                                {numl}
                            </p>
                        ))}
                    </div><br/><br/>
                    
                    <div className='chek'>
                        {numberKey.map((nuk) => (
                            <button key={nuk} onClick={() => handleKeys(nuk)}>
                                {nuk}
                            </button>
                        ))}<br/><br/>
                        <button onClick={checkGuess}>Check</button>
                        <button onClick={giveup}>Give Up</button>
                    </div>
				</div>
			</div>
        </div>
    );
}
 
export default Doi;